name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Suite
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev \
            build-essential \
            curl \
            wget \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: './differential/src-tauri -> target'

      - name: Install frontend dependencies
        working-directory: ./differential
        run: bun install

      - name: TypeScript type check
        working-directory: ./differential
        run: bun run tsc --noEmit

      - name: Rust format check
        working-directory: ./differential/src-tauri
        run: cargo fmt --all -- --check

      - name: Rust clippy
        working-directory: ./differential/src-tauri
        run: cargo clippy -- -D warnings

      - name: Rust tests
        working-directory: ./differential/src-tauri
        run: cargo test

      - name: Build
        working-directory: ./differential
        run: bun run build

  build:
    name: Build Release
    runs-on: ${{ matrix.os }}
    needs: test
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev \
            build-essential \
            curl \
            wget \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: './differential/src-tauri -> target'

      - name: Install frontend dependencies
        working-directory: ./differential
        run: bun install

      - name: Build Tauri app
        working-directory: ./differential
        run: bun run tauri build

      - name: Upload artifacts (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: |
            differential/src-tauri/target/release/bundle/deb/*.deb
            differential/src-tauri/target/release/bundle/appimage/*.AppImage

      - name: Upload artifacts (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: differential/src-tauri/target/release/bundle/msi/*.msi

      - name: Upload artifacts (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: |
            differential/src-tauri/target/release/bundle/dmg/*.dmg
            differential/src-tauri/target/release/bundle/macos/*.app
